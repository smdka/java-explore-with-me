CREATE TABLE IF NOT EXISTS categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(255) NOT NULL,
    CONSTRAINT PK_CATEGORIES PRIMARY KEY (id),
    CONSTRAINT UNIQUE_NAME UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name  VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    CONSTRAINT PK_USERS PRIMARY KEY (id),
    CONSTRAINT UNIQUE_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS locations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY,
    lat FLOAT NOT NULL DEFAULT 0.0,
    lon FLOAT NOT NULL DEFAULT 0.0,
    CONSTRAINT PK_LOCATIONS PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY,
    annotation         VARCHAR(2000)               NOT NULL,
    category_id        BIGINT                      NOT NULL,
    confirmed_requests INT     DEFAULT 0,
    created_on         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    description        VARCHAR(7000)               NOT NULL,
    event_date         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    initiator_id       BIGINT                      NOT NULL,
    location_id        BIGINT                      NOT NULL,
    paid               BOOLEAN DEFAULT FALSE,
    participant_limit  INT     DEFAULT 0,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN DEFAULT FALSE,
    state              INT                         NOT NULL,
    title              VARCHAR(120)                NOT NULL,
    CONSTRAINT PK_EVENTS PRIMARY KEY (id),
    FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE,
    FOREIGN KEY (initiator_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (location_id) REFERENCES locations (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY,
    pinned BOOL DEFAULT FALSE,
    title  VARCHAR(100) NOT NULL,
    CONSTRAINT PK_COMPILATIONS PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilation_events
(
    compilation_id BIGINT,
    event_id       BIGINT,
    PRIMARY KEY (compilation_id, event_id),
    FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY,
    event_id     BIGINT,
    requester_id BIGINT,
    created      TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    status       INT                         NOT NULL,
    FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    FOREIGN KEY (requester_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT UNIQUE_REQUEST UNIQUE (event_id, requester_id)
);

CREATE TABLE IF NOT EXISTS comments
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY,
    text       VARCHAR                     NOT NULL,
    user_id    BIGINT                      NOT NULL,
    event_id   BIGINT                      NOT NULL,
    created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
);

CREATE INDEX IF NOT EXISTS IDX_COMPILATIONS_PINNED ON compilations (pinned);
CREATE INDEX IF NOT EXISTS IDX_EVENTS_INITIATOR_ID ON events (initiator_id);
CREATE INDEX IF NOT EXISTS IDX_EVENTS_STATE ON events (state);
CREATE INDEX IF NOT EXISTS IDX_EVENTS_CATEGORY_ID ON events (category_id);
CREATE INDEX IF NOT EXISTS IDX_EVENTS_EVENT_DATE ON events (event_date);
CREATE INDEX IF NOT EXISTS IDX_EVENTS_DESCRIPTION ON events (description);
CREATE INDEX IF NOT EXISTS IDX_EVENTS_ANNOTATION ON events (annotation);
CREATE INDEX IF NOT EXISTS IDX_EVENTS_PAID ON events (paid);
CREATE INDEX IF NOT EXISTS IDX_REQUESTS_EVENT_ID ON requests (event_id);
CREATE INDEX IF NOT EXISTS IDX_COMMENT_EVENT on comments (event_id);
CREATE INDEX IF NOT EXISTS IDX_COMMENT_USER on comments (user_id);